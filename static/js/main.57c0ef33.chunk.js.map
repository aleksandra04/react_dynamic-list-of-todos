{"version":3,"sources":["ArrsApi.js","User.js","TodoItem.js","TodoList.js","App.js","index.js"],"names":["getUsers","response","regenerator_default","a","async","_context","prev","next","awrap","fetch","sent","abrupt","json","stop","getTodos","_context2","User","_ref","user","react_default","createElement","Fragment","name","propTypes","PropTypes","string","isRequired","TodoItem","todo","id","title","src_User","completed","TodoList","getTodosArr","_useState","useState","_useState2","Object","slicedToArray","visibleTodos","saveTodos","_useState3","_useState4","isLoading","changeLoading","_useState5","_useState6","loaded","saveLoaded","_useState7","_useState8","sortedColumn","changeSortedColumn","_useState9","_useState10","error","saveError","loadTodos","todos","t0","sortById","b","sortByTitle","localeCompare","sortbyName","sortByStatus","sortHeader","func","sortedTodos","toConsumableArray","sort","reverse","length","type","onClick","className","e","target","innerText","map","src_TodoItem","App","src_TodoList","users","objectSpread2","find","userId","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.57c0ef33.chunk.js","sourcesContent":["const URLusers = 'https://jsonplaceholder.typicode.com/users';\nconst URLtodos = 'https://jsonplaceholder.typicode.com/todos';\n\nexport const getUsers = async() => {\n  const response = await fetch(URLusers);\n\n  return response.json();\n};\n\nexport const getTodos = async() => {\n  const response = await fetch(URLtodos);\n\n  return response.json();\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = ({ user }) => (\n  <>{user.name}</>\n);\n\nUser.propTypes = { user: PropTypes.string.isRequired };\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport User from './User';\n\nconst TodoItem = ({ todo }) => (\n  <tr>\n    <td>{todo.id}</td>\n    <td>{todo.title}</td>\n    <td><User user={todo.user} /></td>\n    <td>{todo.completed ? 'completed' : 'not completed'}</td>\n  </tr>\n);\n\nTodoItem.propTypes = { todo: PropTypes.string.isRequired };\n\nexport default TodoItem;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nconst TodoList = ({ getTodosArr }) => {\n  const [visibleTodos, saveTodos] = useState([]);\n  const [isLoading, changeLoading] = useState(false);\n  const [loaded, saveLoaded] = useState(false);\n  const [sortedColumn, changeSortedColumn] = useState('');\n  const [error, saveError] = useState(false);\n\n  const loadTodos = async() => {\n    try {\n      changeLoading(true);\n\n      const todos = await getTodosArr();\n\n      saveTodos(todos);\n      changeLoading(false);\n      saveLoaded(true);\n      saveError(false);\n    } catch (e) {\n      saveError(true);\n    }\n  };\n\n  const sortById = (a, b) => a.id - b.id;\n  const sortByTitle = (a, b) => a.title.localeCompare(b.title);\n  const sortbyName = (a, b) => a.user.name.localeCompare(b.user.name);\n  const sortByStatus = (a, b) => (a.completed > b.completed ? -1 : 1);\n\n  const sortHeader = (title, func) => {\n    const sortedTodos = [...visibleTodos].sort(func);\n\n    sortedColumn === title\n      ? saveTodos([...visibleTodos].reverse())\n      : saveTodos(sortedTodos);\n    changeSortedColumn(title);\n  };\n\n  return (\n    <div>\n      {visibleTodos.length === 0 && !error\n        && (\n          <button\n            type=\"button\"\n            onClick={loadTodos}\n          >\n            Load\n          </button>\n        )}\n      {isLoading && !error && <p>Loading...</p>}\n      {loaded && !isLoading && (\n        <table>\n          <thead>\n            <tr className=\"header\">\n              <th onClick={e => sortHeader(e.target.innerText, sortById)}>\n                ID\n              </th>\n              <th onClick={e => sortHeader(e.target.innerText, sortByTitle)}>\n                TITLE\n              </th>\n              <th onClick={e => sortHeader(e.target.innerText, sortbyName)}>\n                USER\n              </th>\n              <th onClick={e => sortHeader(e.target.innerText, sortByStatus)}>\n                STATUS\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {visibleTodos.map(todo => (\n              <TodoItem todo={todo} />\n            ))}\n          </tbody>\n        </table>\n      )\n      }\n      {error && (\n        <div>\nError occurred\n          <button\n            type=\"button\"\n            onClick={loadTodos}\n          >\n            Try again\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nTodoList.propTypes = { getTodosArr: PropTypes.func.isRequired };\n\nexport default TodoList;\n","import React from 'react';\nimport './App.css';\nimport { getUsers, getTodos } from './ArrsApi';\n\nimport TodoList from './TodoList';\n\nconst App = () => {\n  const TodosUsers = async() => {\n    const todos = await getTodos();\n    const users = await getUsers();\n\n    return todos.map(todo => ({\n      ...todo,\n      user: users.find(user => user.id === todo.userId),\n    }));\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of todos</h1>\n      <TodoList getTodosArr={TodosUsers} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}